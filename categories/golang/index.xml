<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on 自在生活</title>
    <link>https://www.at719.com/categories/golang/</link>
    <description>Recent content in Golang on 自在生活</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://www.at719.com&#34;&gt;at719&lt;/a&gt; 2018</copyright>
    <lastBuildDate>Wed, 10 Apr 2019 09:33:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.at719.com/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang杂物柜</title>
      <link>https://www.at719.com/posts/golang_memo/</link>
      <pubDate>Wed, 10 Apr 2019 09:33:00 +0000</pubDate>
      
      <guid>https://www.at719.com/posts/golang_memo/</guid>
      <description>数组 声明数组 var arr [3]string  初始化数组 var arr= [3]string{&amp;quot;i&amp;quot;，&amp;quot;love&amp;quot;,&amp;quot;you&amp;quot;} 或者 var arr= [...]string{&amp;quot;i&amp;quot;，&amp;quot;love&amp;quot;,&amp;quot;you&amp;quot;}  遍历数组 var arr= [...]string{&amp;quot;i&amp;quot;，&amp;quot;love&amp;quot;,&amp;quot;you&amp;quot;} for k,v := range arr { }  切片 切片的定义 var s1 []int ; var s2 []int ;
切片的创建 var s1 []int = make([]int, 5, 8) var s2 []int = make([]int, 8) // 满容切片
// 使用 make 函数创建的切片内容是「零值切片」，也就是内部数组的元素都是零值
切片 make var s []int = []int{1,2,3,4,5} // 满容的 // Go 语言提供了内置函数 len() 和 cap() 可以直接获得切片的长度和容量属性。</description>
    </item>
    
  </channel>
</rss>