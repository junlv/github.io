<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on 自在生活</title>
    <link>https://www.at719.com/tags/javascript/</link>
    <description>Recent content in Javascript on 自在生活</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://www.at719.com&#34;&gt;at719&lt;/a&gt; 2018</copyright>
    <lastBuildDate>Mon, 20 May 2019 09:33:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.at719.com/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>记一次原型链错误使用</title>
      <link>https://www.at719.com/posts/javascript_article1/</link>
      <pubDate>Mon, 20 May 2019 09:33:00 +0000</pubDate>
      
      <guid>https://www.at719.com/posts/javascript_article1/</guid>
      <description>有关原型链的知识点看过好多文章了,自认为还是很熟一次码代码中不小心就翻车了
先看一段代码
var SuperClass = function() {}
SuperClass.prototype.name = 1
SuperClass.prototype.names = []
var SubClass = function(){}
SubClass.prototype = new SuperClass() SubClass.prototype.constructor = SubClass
var a = new SubClass() var b = new SubClass()
我们打印 console.log(a.name) console.log(b.name)
输出结果是 1 1
我们都知道 当实例上的属性不存在的时候 根据原型链原理，会往它的原型链上找 所以name 就是 SuperClass.prototype.name
如果我们对当前这个实例进行赋值 a.name = 2 这时候 console.log(a.name) console.log(b.name) 会输出什么呢？
输出结果是 2 1
因为 a.name = 2 会对a实例赋一个name属性 值为2 同时对外会遮住原型链上的属性
所以a.name输出2
a.name = 2 如果delete a.name 输出结果是 1 1</description>
    </item>
    
  </channel>
</rss>